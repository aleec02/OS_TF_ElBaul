<section class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="card shadow-lg border-0">
                    <div class="card-header bg-primary text-white text-center py-4">
                        <h2 class="mb-0">
                            <i class="fas fa-sign-in-alt me-2"></i>Iniciar Sesión
                        </h2>
                        <p class="mb-0 mt-2">Bienvenido de vuelta a ElBaul</p>
                    </div>
                    
                    <div class="card-body p-4">
                        <form id="loginForm" method="POST" action="javascript:void(0);">
                            <div class="mb-3">
                                <label for="email" class="form-label">
                                    <i class="fas fa-envelope me-1"></i>Correo Electrónico
                                </label>
                                <input type="email" class="form-control form-control-lg" id="email" name="email" required
                                       placeholder="tu@email.com">
                                <div class="invalid-feedback" id="email-error"></div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="password" class="form-label">
                                    <i class="fas fa-lock me-1"></i>Contraseña
                                </label>
                                <div class="input-group">
                                    <input type="password" class="form-control form-control-lg" id="password" name="password" required
                                           placeholder="Tu contraseña">
                                    <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="invalid-feedback" id="password-error"></div>
                            </div>
                            
                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="rememberMe">
                                <label class="form-check-label" for="rememberMe">
                                    Recordarme
                                </label>
                            </div>
                            
                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary btn-lg" id="loginBtn">
                                    <span class="login-text">
                                        <i class="fas fa-sign-in-alt me-2"></i>Iniciar Sesión
                                    </span>
                                    <span class="loading-spinner d-none">
                                        <i class="fas fa-spinner fa-spin me-2"></i>Iniciando sesión...
                                    </span>
                                </button>
                            </div>
                        </form>
                        
                        <div class="text-center">
                            <p class="mb-0">
                                ¿No tienes cuenta? 
                                <a href="/registro" class="text-primary fw-bold">Regístrate aquí</a>
                            </p>
                        </div>
                    </div>
                </div>
                
                <!-- Demo Credentials (remove in production) -->
                <div class="card mt-3 border-info">
                    <div class="card-body">
                        <h6 class="card-title text-info">
                            <i class="fas fa-info-circle me-1"></i>Credenciales de Demo
                        </h6>
                        <small class="text-muted">
                            <strong>Admin:</strong> renzo.barrios@gmail.com / admin123<br>
                            <strong>Cliente:</strong> cmendoza@gmail.com / CesarM#2023
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('loginForm');
    const loginBtn = document.getElementById('loginBtn');
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    
    console.log('Login page loaded');
    
    // Toggle password visibility
    if (togglePassword && passwordInput) {
        togglePassword.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            
            const icon = this.querySelector('i');
            icon.classList.toggle('fa-eye');
            icon.classList.toggle('fa-eye-slash');
        });
    }
    
    // Handle form submission
    if (loginForm) {
        console.log('Login form found, adding event listener');
        console.log('Available functions:', {
            apiCall: typeof window.apiCall,
            showAlert: typeof window.showAlert,
            updateAuthUI: typeof window.updateAuthUI,
            syncUserSession: typeof window.syncUserSession,
            ElBaulCommon: typeof window.ElBaulCommon
        });
        
        loginForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            console.log('Login form submitted');
            
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const rememberMe = document.getElementById('rememberMe').checked;
            
            // Clear previous errors
            clearErrors();
            
            // Validate form
            if (!validateLoginForm(email, password)) {
                return;
            }
            
            // Show loading state
            setLoadingState(true);
            
            try {
                console.log('Attempting login...');
                
                // Check if apiCall is available, otherwise use fetch directly
                let response;
                if (typeof window.apiCall === 'function') {
                    response = await window.apiCall('/usuarios/login', {
                        method: 'POST',
                        body: JSON.stringify({ 
                            email: email, 
                            contrasena: password 
                        })
                    });
                } else {
                    console.log('apiCall not available, using fetch directly');
                    const fetchResponse = await fetch('/api/usuarios/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                            email: email, 
                            contrasena: password 
                        })
                    });
                    response = await fetchResponse.json();
                }
                
                if (response.exito) {
                    // Store authentication data
                    const token = response.data.token;
                    const userData = response.data.usuario;
                    
                    // Store in localStorage
                    localStorage.setItem('authToken', token);
                    localStorage.setItem('user', JSON.stringify(userData));
                    
                    // Set remember me
                    if (rememberMe) {
                        localStorage.setItem('rememberMe', 'true');
                    }
                    
                    // Update global variables
                    window.authToken = token;
                    window.currentUser = userData;
                    
                    // Sync with backend session
                    if (typeof window.syncUserSession === 'function') {
                        await window.syncUserSession(userData);
                    }
                    
                    // Update UI
                    if (typeof window.updateAuthUI === 'function') {
                        window.updateAuthUI(userData);
                    }
                    
                    // Show success message
                    if (typeof window.showAlert === 'function') {
                        window.showAlert('success', '¡Bienvenido! Redirigiendo...');
                    } else {
                        alert('¡Bienvenido! Redirigiendo...');
                    }
                    
                    setTimeout(() => {
                        window.location.href = '/perfil';
                    }, 1500);
                }
            } catch (error) {
                console.error('Login error:', error);
                if (typeof window.showAlert === 'function') {
                    window.showAlert('danger', error.message || 'Error al iniciar sesión. Verifica tus credenciales.');
                } else {
                    alert('Error al iniciar sesión: ' + (error.message || 'Verifica tus credenciales.'));
                }
                setLoadingState(false);
            }
        });
    }
    
    function validateLoginForm(email, password) {
        let isValid = true;
        
        // Simple email validation if ElBaulAuth is not available
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const isEmailValid = window.ElBaulAuth?.validateEmail ? 
            window.ElBaulAuth.validateEmail(email) : 
            emailRegex.test(email);
        
        if (!email || !isEmailValid) {
            showFieldError('email', 'Por favor ingresa un correo válido');
            isValid = false;
        }
        
        if (!password || password.length < 6) {
            showFieldError('password', 'La contraseña debe tener al menos 6 caracteres');
            isValid = false;
        }
        
        return isValid;
    }
    
    function showFieldError(fieldId, message) {
        const field = document.getElementById(fieldId);
        const errorDiv = document.getElementById(fieldId + '-error');
        
        if (field) {
            field.classList.add('is-invalid');
        }
        if (errorDiv) {
            errorDiv.textContent = message;
        }
    }
    
    function clearErrors() {
        const fields = ['email', 'password'];
        fields.forEach(fieldId => {
            const field = document.getElementById(fieldId);
            const errorDiv = document.getElementById(fieldId + '-error');
            
            if (field) {
                field.classList.remove('is-invalid');
            }
            if (errorDiv) {
                errorDiv.textContent = '';
            }
        });
    }
    
    function setLoadingState(loading) {
        const loginText = loginBtn.querySelector('.login-text');
        const loadingSpinner = loginBtn.querySelector('.loading-spinner');
        
        if (loading) {
            loginBtn.disabled = true;
            if (loginText) loginText.classList.add('d-none');
            if (loadingSpinner) loadingSpinner.classList.remove('d-none');
        } else {
            loginBtn.disabled = false;
            if (loginText) loginText.classList.remove('d-none');
            if (loadingSpinner) loadingSpinner.classList.add('d-none');
        }
    }
});
</script>