<!-- Post Detail Page -->
<section class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <!-- Breadcrumb -->
                <nav aria-label="breadcrumb" class="mb-4">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Inicio</a></li>
                        <li class="breadcrumb-item"><a href="/comunidad">Comunidad</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Publicación</li>
                    </ol>
                </nav>
                
                <!-- Alert container -->
                <div id="alerts-container"></div>
                
                <!-- Post Container -->
                <div id="post-container">
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando publicación...</span>
                        </div>
                        <p class="mt-3 text-muted">Cargando publicación...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('Post detail page loaded');
    loadPostDetail();
});

async function loadPostDetail() {
    try {
        const postId = getPostIdFromURL();
        if (!postId) {
            showError('ID de publicación no válido');
            return;
        }

        console.log('Loading post detail for:', postId);
        
        const response = await window.apiCall(`/publicaciones/${postId}`);
        console.log('Post detail response:', response);
        
        if (response.exito && response.data.publicacion) {
            displayPostDetail(response.data);
        } else {
            throw new Error(response.mensaje || 'Error al cargar la publicación');
        }
        
    } catch (error) {
        console.error('Error loading post detail:', error);
        showError(error.message);
    }
}

function displayPostDetail(data) {
    const { publicacion, comentarios, reacciones, resumen } = data;
    
    // Display post
    const postContainer = document.getElementById('post-container');
    const postHtml = createPostHTML(publicacion, resumen);
    postContainer.innerHTML = postHtml;
    
    // Display comments
    const commentsContainer = document.getElementById('comments-container');
    const commentsHtml = createCommentsHTML(comentarios);
    commentsContainer.innerHTML = commentsHtml;
    
    // Update page title
    document.title = `Publicación de ${publicacion.usuario.nombre} - ElBaul`;
}

function createPostHTML(post, resumen) {
    const isOwner = window.user && window.user.usuario_id === post.usuario_id;
    const hasImages = post.imagenes && post.imagenes.length > 0;
    
    return `
        <div class="card shadow-sm">
            <div class="card-header bg-transparent">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <div class="avatar-placeholder me-3">
                            <i class="fas fa-user-circle fa-2x text-muted"></i>
                        </div>
                        <div>
                            <h6 class="mb-0">${post.usuario.nombre} ${post.usuario.apellido}</h6>
                            <small class="text-muted">${formatDate(post.fecha)}</small>
                        </div>
                    </div>
                    ${isOwner ? `
                        <div class="dropdown">
                            <button class="btn btn-link text-muted" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="editPost('${post.post_id}')">
                                    <i class="fas fa-edit me-2"></i>Editar
                                </a></li>
                                <li><a class="dropdown-item text-danger" href="#" onclick="deletePost('${post.post_id}')">
                                    <i class="fas fa-trash me-2"></i>Eliminar
                                </a></li>
                            </ul>
                        </div>
                    ` : ''}
                </div>
            </div>
            
            <div class="card-body">
                <p class="card-text">${formatContent(post.contenido)}</p>
                
                ${hasImages ? `
                    <div class="post-images mb-3">
                        ${post.imagenes.map(img => `
                            <img src="${img}" class="img-fluid rounded mb-2" 
                                 style="max-height: 300px; object-fit: cover;"
                                 onerror="this.style.display='none'">
                        `).join('')}
                    </div>
                ` : ''}
                
                ${post.producto ? `
                    <div class="product-mention card bg-light">
                        <div class="card-body p-3">
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    <i class="fas fa-tag fa-2x text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">${post.producto.titulo}</h6>
                                    <p class="mb-0 text-success">S/ ${post.producto.precio}</p>
                                </div>
                                <a href="/productos/${post.producto.producto_id}" class="btn btn-sm btn-primary">
                                    Ver Producto
                                </a>
                            </div>
                        </div>
                    </div>
                ` : ''}
                
                ${post.tags && post.tags.length > 0 ? `
                    <div class="tags mt-3">
                        ${post.tags.map(tag => `
                            <span class="badge bg-secondary me-1">#${tag}</span>
                        `).join('')}
                    </div>
                ` : ''}
            </div>
            
            <div class="card-footer bg-transparent">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <button class="btn btn-link text-muted me-3" onclick="toggleLike('${post.post_id}')">
                            <i class="far fa-heart"></i>
                            <span class="ms-1">${resumen.total_reacciones || 0}</span>
                        </button>
                        <button class="btn btn-link text-muted" onclick="focusCommentInput()">
                            <i class="far fa-comment"></i>
                            <span class="ms-1">${resumen.total_comentarios || 0}</span>
                        </button>
                    </div>
                    <div class="text-muted">
                        <small>${formatDate(post.fecha)}</small>
                    </div>
                </div>
            </div>
        </div>
    `;
}

function createCommentsHTML(comentarios) {
    if (!comentarios || comentarios.length === 0) {
        return `
            <div class="card">
                <div class="card-body text-center text-muted">
                    <i class="far fa-comment fa-2x mb-2"></i>
                    <p>No hay comentarios aún. ¡Sé el primero en comentar!</p>
                </div>
            </div>
        `;
    }
    
    return `
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Comentarios (${comentarios.length})</h5>
            </div>
            <div class="card-body">
                ${comentarios.map(comment => `
                    <div class="comment mb-3">
                        <div class="d-flex">
                            <div class="avatar-placeholder me-3">
                                <i class="fas fa-user-circle text-muted"></i>
                            </div>
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start">
                                    <h6 class="mb-1">${comment.usuario.nombre} ${comment.usuario.apellido}</h6>
                                    <small class="text-muted">${formatDate(comment.fecha)}</small>
                                </div>
                                <p class="mb-0">${comment.contenido}</p>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
        
        ${window.user ? `
            <div class="card mt-3">
                <div class="card-body">
                    <h6>Agregar comentario</h6>
                    <form id="comment-form" onsubmit="submitComment(event)">
                        <div class="mb-3">
                            <textarea class="form-control" id="comment-content" rows="3" 
                                      placeholder="Escribe tu comentario..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i>Comentar
                        </button>
                    </form>
                </div>
            </div>
        ` : `
            <div class="card mt-3">
                <div class="card-body text-center">
                    <p class="mb-2">¿Quieres comentar?</p>
                    <a href="/login" class="btn btn-primary">Inicia sesión</a>
                </div>
            </div>
        `}
    `;
}

// Utility functions
function getPostIdFromURL() {
    const path = window.location.pathname;
    const matches = path.match(/\/publicaciones\/([^\/]+)/);
    return matches ? matches[1] : null;
}

function formatContent(content) {
    // Convert hashtags to links
    return content.replace(/#(\w+)/g, '<a href="/comunidad?tag=$1" class="text-primary">#$1</a>');
}

function formatDate(dateString) {
    if (!dateString) return 'Fecha no disponible';
    
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('es-ES', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    } catch (error) {
        return dateString;
    }
}

function showError(message) {
    const container = document.getElementById('post-container');
    container.innerHTML = `
        <div class="alert alert-danger text-center">
            <i class="fas fa-exclamation-triangle me-2"></i>
            ${message}
        </div>
    `;
}

// Post interaction functions
async function toggleLike(postId) {
    if (!window.user) {
        window.showAlert('warning', 'Debes iniciar sesión para reaccionar');
        return;
    }
    
    try {
        const response = await window.apiCall(`/publicaciones/${postId}/reacciones`, {
            method: 'POST',
            body: JSON.stringify({ tipo: 'like' })
        });
        
        if (response.exito) {
            // Reload post to update like count
            loadPostDetail();
        }
    } catch (error) {
        console.error('Error toggling like:', error);
        window.showAlert('danger', 'Error al reaccionar');
    }
}

async function submitComment(event) {
    event.preventDefault();
    
    const content = document.getElementById('comment-content').value.trim();
    if (!content) return;
    
    const postId = getPostIdFromURL();
    
    try {
        const response = await window.apiCall(`/publicaciones/${postId}/comentarios`, {
            method: 'POST',
            body: JSON.stringify({ contenido: content })
        });
        
        if (response.exito) {
            document.getElementById('comment-content').value = '';
            loadPostDetail(); // Reload to show new comment
        }
    } catch (error) {
        console.error('Error submitting comment:', error);
        window.showAlert('danger', 'Error al publicar comentario');
    }
}

function focusCommentInput() {
    const commentInput = document.getElementById('comment-content');
    if (commentInput) {
        commentInput.focus();
        commentInput.scrollIntoView({ behavior: 'smooth' });
    }
}

// Post management functions (for owners)
function editPost(postId) {
    // Implement edit functionality
    window.showAlert('info', 'Función de edición en desarrollo');
}

function deletePost(postId) {
    if (confirm('¿Estás seguro de que quieres eliminar esta publicación?')) {
        // Implement delete functionality
        window.showAlert('info', 'Función de eliminación en desarrollo');
    }
}
</script> 