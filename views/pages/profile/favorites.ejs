<!-- My Favorites Page -->
<section class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="mb-0">
                        <i class="fas fa-heart me-2"></i>Mis Favoritos
                    </h1>
                    <a href="/productos" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Explorar Productos
                    </a>
                </div>
                
                <!-- Favorites Grid -->
                <div id="favorites-container">
                    <div class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando favoritos...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    loadFavorites();
});

async function loadFavorites() {
    try {
        // Use the common apiCall function if available, otherwise fallback
        let data;
        if (typeof window.apiCall === 'function') {
            data = await window.apiCall('/favoritos');
        } else {
            const response = await fetch('/api/favoritos', {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                }
            });
            data = await response.json();
        }
        
        const container = document.getElementById('favorites-container');
        
        if (data.exito && data.data.favoritos && data.data.favoritos.length > 0) {
            let html = '<div class="row g-4">';
            data.data.favoritos.forEach(favorite => {
                const product = favorite.producto;
                const imagenes = favorite.imagenes || [];
                html += `
                    <div class="col-md-6 col-lg-4">
                        <div class="card h-100 shadow-sm">
                            <img src="${imagenes.length > 0 ? imagenes[0] : '/img/placeholder.jpg'}" 
                                 class="card-img-top" alt="${product.titulo}" style="height: 200px; object-fit: cover;"
                                 onerror="this.src='/img/placeholder.jpg'">
                            <div class="card-body">
                                <h6 class="card-title">${product.titulo}</h6>
                                <p class="card-text text-muted small">${product.descripcion ? product.descripcion.substring(0, 80) + '...' : 'Sin descripción'}</p>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="h5 text-success mb-0">S/ ${product.precio}</span>
                                    <span class="badge bg-secondary">${product.estado}</span>
                                </div>
                                <div class="d-grid gap-2">
                                    <a href="/productos/${product.producto_id}" class="btn btn-primary btn-sm">
                                        <i class="fas fa-eye me-1"></i>Ver Detalle
                                    </a>
                                    <button onclick="removeFavorite('${favorite.favorito_id}')" class="btn btn-outline-danger btn-sm">
                                        <i class="fas fa-heart-broken me-1"></i>Quitar de Favoritos
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            html += '</div>';
            container.innerHTML = html;
        } else {
            container.innerHTML = `
                <div class="text-center py-5">
                    <i class="fas fa-heart fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">No tienes favoritos aún</h4>
                    <p class="text-muted">¡Agrega productos a tus favoritos para encontrarlos fácilmente!</p>
                    <a href="/productos" class="btn btn-primary">
                        <i class="fas fa-shopping-cart me-2"></i>Explorar Productos
                    </a>
                </div>
            `;
        }
    } catch (error) {
        console.error('Error loading favorites:', error);
        document.getElementById('favorites-container').innerHTML = `
            <div class="text-center py-5">
                <i class="fas fa-exclamation-triangle fa-3x text-danger mb-3"></i>
                <h4 class="text-danger">Error al cargar favoritos</h4>
                <p class="text-muted">Por favor, intenta de nuevo más tarde.</p>
                <button onclick="loadFavorites()" class="btn btn-primary">
                    <i class="fas fa-redo me-2"></i>Reintentar
                </button>
            </div>
        `;
    }
}

async function removeFavorite(favoriteId) {
    if (!confirm('¿Estás seguro de que quieres quitar este producto de tus favoritos?')) {
        return;
    }
    
    try {
        let data;
        if (typeof window.apiCall === 'function') {
            data = await window.apiCall(`/favoritos/${favoriteId}`, {
                method: 'DELETE'
            });
        } else {
            const response = await fetch(`/api/favoritos/${favoriteId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                }
            });
            data = await response.json();
        }
        
        if (data.exito) {
            if (typeof window.showAlert === 'function') {
                window.showAlert('success', 'Producto removido de favoritos');
            } else {
                alert('Producto removido de favoritos');
            }
            loadFavorites(); // Reload the list
        } else {
            if (typeof window.showAlert === 'function') {
                window.showAlert('danger', data.mensaje || 'Error al remover de favoritos');
            } else {
                alert('Error: ' + (data.mensaje || 'Error al remover de favoritos'));
            }
        }
    } catch (error) {
        console.error('Error removing favorite:', error);
        if (typeof window.showAlert === 'function') {
            window.showAlert('danger', 'Error de conexión');
        } else {
            alert('Error de conexión');
        }
    }
}
</script> 